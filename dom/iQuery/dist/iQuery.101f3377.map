{"version":3,"sources":["iQuery.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node1","node2","parentNode","insertBefore","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,GAAP,GAAa;AACX;;;;;AAKAC,QANW,kBAMJC,MANI,EAMI;AACb;AACA,QAAMC,YAAYC,SAASC,aAAT,CAAuB,UAAvB,CAAlB;AACA;AACAF,cAAUG,SAAV,GAAsBJ,OAAOK,IAAP,EAAtB;AACA,WAAOJ,UAAUK,OAAV,CAAkBC,UAAzB;AACD,GAZU;;AAaX;;;;;AAKAC,OAlBW,iBAkBLC,KAlBK,EAkBEC,KAlBF,EAkBS;AAClBD,UAAME,UAAN,CAAiBC,YAAjB,CAA8BF,KAA9B,EAAqCD,KAArC;AACD;AApBU,CAAb;;AAuBAI,QAAQC,GAAR,CAAY,YAAZ","file":"iQuery.101f3377.map","sourceRoot":"../src","sourcesContent":["window.dom = {\n  /**\n   * 创建可嵌套的标签\n   * @param {String} string 标签字符串\n   * @returns 创建的嵌套元素的第一个子标签\n   */\n  create(string) {\n    //template标签可以容纳任意元素，不过其中的元素不能通过DOM直接获得\n    const container = document.createElement(\"template\");\n    //去除字符串中的所有空格\n    container.innerHTML = string.trim();\n    return container.content.firstChild;\n  },\n  /**\n   * 在一个节点后插入新的节点\n   * @param {Node} node1 原标签\n   * @param {Node} node2 要插入的标签\n   */\n  after(node1, node2) {\n    node1.parentNode.insertBefore(node2, node1);\n  },\n};\n\nconsole.log(\"iQuery加载完毕\");\n"]}